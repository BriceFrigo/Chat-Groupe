[{"C:\\Users\\Brice FRIGO\\Desktop\\tuto-react-qui-marche\\src\\index.js":"1","C:\\Users\\Brice FRIGO\\Desktop\\tuto-react-qui-marche\\src\\reportWebVitals.js":"2","C:\\Users\\Brice FRIGO\\Desktop\\tuto-react-qui-marche\\src\\App.js":"3","C:\\Users\\Brice FRIGO\\Desktop\\tuto-react-qui-marche\\src\\components\\Chat.js":"4","C:\\Users\\Brice FRIGO\\Desktop\\tuto-react-qui-marche\\src\\components\\Auth.js":"5","C:\\Users\\Brice FRIGO\\Desktop\\tuto-react-qui-marche\\src\\firebase-config.js":"6"},{"size":535,"mtime":1674633881630,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1674633881922,"results":"9","hashOfConfig":"8"},{"size":1758,"mtime":1674633881734,"results":"10","hashOfConfig":"8"},{"size":2097,"mtime":1674633881963,"results":"11","hashOfConfig":"8"},{"size":723,"mtime":1674633882006,"results":"12","hashOfConfig":"8"},{"size":879,"mtime":1674633881848,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nu7b6y",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Brice FRIGO\\Desktop\\tuto-react-qui-marche\\src\\index.js",[],[],"C:\\Users\\Brice FRIGO\\Desktop\\tuto-react-qui-marche\\src\\reportWebVitals.js",[],[],"C:\\Users\\Brice FRIGO\\Desktop\\tuto-react-qui-marche\\src\\App.js",["34","35"],[],"import logo from './logo.svg';\nimport './App.css';\nimport { Auth } from './components/Auth';\nimport { useState, useRef } from 'react';\nimport Cookies from \"universal-cookie\";\nimport { CONSTANTS } from '@firebase/util';\nimport { Chat } from './components/Chat';\nimport '../src/css/style.css'\nconst cookies = new  Cookies();\n\nfunction App() {\n  const [isAuth, setIsAuth] = useState( cookies.get(\"auth-token\"));\n  const [room, setRoom] = useState(null);\n\n  const roomInputRef = useRef(null);\n  if(!isAuth){\n    return (\n      <div className=\"App\">\n          <div><Auth setIsAuth={setIsAuth}/></div>\n      </div>\n    );\n  }\n\n  return( \n    <div>{room ?(\n      <Chat room={room} /> \n      ) : (\n      <form id='flex' onSubmit={() => setRoom(roomInputRef.current.value)} className='room'>\n        <label>Rentrée dans le salon</label>\n        <input id='salon' ref={roomInputRef}/> \n        <button id='btn' type='submit'>Entrée</button>\n      </form> )}\n      <section id='all'>\n          <div className='box'>\n            <h2>General</h2>\n            <p>lorem loremloremlorem loremloremlorem loremloremlorem loremlorem </p>\n            <button>Rejoindre</button>\n          </div>\n\n          <div className='box'>\n            <h2>RPsofiane</h2>\n            <p>lorem loremloremlorem loremloremlorem loremloremlorem loremlorem </p>\n            <button>Rejoindre</button>\n          </div>\n\n          <div className='box'>\n            <h2>RPnathan</h2>\n            <p>lorem loremloremlorem loremloremlorem loremloremlorem loremlorem </p>\n            <button>Rejoindre</button>\n          </div>\n        </section>\n\n        <p id='footer'>&copy; 2023 Brice : <span className='bleu'>https://bricefrigo.github.io/Chat-Groupe/</span></p>\n    </div>)}\nexport default App;\n","C:\\Users\\Brice FRIGO\\Desktop\\tuto-react-qui-marche\\src\\components\\Chat.js",["36"],[],"import { useEffect, useState } from \"react\";\nimport { collection ,addDoc, serverTimestamp, onSnapshot, query, where } from '@firebase/firestore';\nimport { auth, db } from '../firebase-config';\nimport '../css/style.css'\n\nexport const Chat = (props) =>{\n\n    const {room} = props;\n\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState(\"\");\n    const messagesRef = collection(db, \"messages\");\n\n    useEffect(() => {\n        const queryMessages = query(messagesRef, where(\"room\", \"==\", room));\n        const unsucribe = onSnapshot(queryMessages, (snapshot) => {\n            let messages = [];\n            snapshot.forEach((doc) => {\n                messages.push({...doc.data(), id: doc.id})\n            });\n            setMessages(messages)\n        });\n\n        return () => unsucribe();  \n    }, []);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if(newMessage === \"\") return;\n\n        await addDoc(messagesRef, {\n            text: newMessage,\n            createAt: serverTimestamp(),\n            user: auth.currentUser.displayName,\n            room,\n        });\n\n        setNewMessage(\"\");\n    };\n\n    return( \n    \n    <div className=\"chat-app\">\n        <div className=\"important\">\n            <h1>{room.toUpperCase()}</h1>\n        </div>\n        <section className=\"text\">\n            <div className=\"messages\">\n                {messages.sort((a, b) => a.createAt?.seconds - b.createAt?.seconds).map((messages, i) => \n                <div className=\"message\">\n                    <span>{messages.user} : ➔ {messages.text}</span> \n                </div>\n                )}\n            </div>\n        </section>\n\n        <form  onSubmit={handleSubmit} className=\"new-message-from\">\n            <input \n                className=\"new-message-input\"\n                placeholder=\"Votre message...\"\n                onChange={(e) => setNewMessage(e.target.value)}\n                value={newMessage}\n            />\n\n            <button type=\"submit\" className=\"send-button\">Envoyer</button>\n        </form>\n    </div>\n    )\n}","C:\\Users\\Brice FRIGO\\Desktop\\tuto-react-qui-marche\\src\\components\\Auth.js",[],[],"C:\\Users\\Brice FRIGO\\Desktop\\tuto-react-qui-marche\\src\\firebase-config.js",[],[],{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":12},{"ruleId":"37","severity":1,"message":"41","line":6,"column":10,"nodeType":"39","messageId":"40","endLine":6,"endColumn":19},{"ruleId":"42","severity":1,"message":"43","line":25,"column":8,"nodeType":"44","endLine":25,"endColumn":10,"suggestions":"45"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'CONSTANTS' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'messagesRef' and 'room'. Either include them or remove the dependency array.","ArrayExpression",["46"],{"desc":"47","fix":"48"},"Update the dependencies array to be: [messagesRef, room]",{"range":"49","text":"50"},[840,842],"[messagesRef, room]"]