{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brice FRIGO\\\\Desktop\\\\tuto-react-qui-marche\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { collection, addDoc, serverTimestamp, onSnapshot, query, where } from '@firebase/firestore';\nimport { auth, db } from '../firebase-config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Chat = props => {\n  _s();\n  const {\n    room\n  } = props;\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const messagesRef = collection(db, \"messages\");\n  useEffect(() => {\n    const queryMessages = query(messagesRef, where(\"room\", \"==\", room));\n    const UNSCRIBE = onSnapshot(queryMessages, snapshot => {\n      let messages = [];\n      snapshot.forEach(doc => {\n        messages.push({\n          ...doc.data(),\n          id: doc.id\n        });\n      });\n      setMessages(messages);\n    });\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (newMessage === \"\") return;\n    await addDoc(messagesRef, {\n      text: newMessage,\n      createAt: serverTimestamp(),\n      user: auth.currentUser.displayName,\n      room\n    });\n    setNewMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.sort((a, b) => {\n        var _a$createAt, _b$createAt;\n        return ((_a$createAt = a.createAt) === null || _a$createAt === void 0 ? void 0 : _a$createAt.seconds) - ((_b$createAt = b.createAt) === null || _b$createAt === void 0 ? void 0 : _b$createAt.seconds);\n      }).map((messages, i) => /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", messages.text, \" \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 103\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"new-message-from\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"new-message-input\",\n        placeholder: \"Votre message...\",\n        onChange: e => setNewMessage(e.target.value),\n        value: newMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"bFuYpZWMfOU2WhBa/CyaGkj6fmk=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","useState","collection","addDoc","serverTimestamp","onSnapshot","query","where","auth","db","Chat","props","room","messages","setMessages","newMessage","setNewMessage","messagesRef","queryMessages","UNSCRIBE","snapshot","forEach","doc","push","data","id","handleSubmit","e","preventDefault","text","createAt","user","currentUser","displayName","sort","a","b","seconds","map","i","target","value"],"sources":["C:/Users/Brice FRIGO/Desktop/tuto-react-qui-marche/src/components/Chat.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { collection ,addDoc, serverTimestamp, onSnapshot, query, where } from '@firebase/firestore';\r\nimport { auth, db } from '../firebase-config';\r\n\r\nexport const Chat = (props) =>{\r\n\r\n    const {room} = props;\r\n\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const messagesRef = collection(db, \"messages\");\r\n\r\n    useEffect(() => {\r\n        const queryMessages = query(messagesRef, where(\"room\", \"==\", room));\r\n        const UNSCRIBE = onSnapshot(queryMessages, (snapshot) => {\r\n            let messages = [];\r\n            snapshot.forEach((doc) => {\r\n                messages.push({...doc.data(), id: doc.id})\r\n            });\r\n            setMessages(messages)\r\n        });\r\n    }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if(newMessage === \"\") return;\r\n\r\n        await addDoc(messagesRef, {\r\n            text: newMessage,\r\n            createAt: serverTimestamp(),\r\n            user: auth.currentUser.displayName,\r\n            room,\r\n        });\r\n\r\n        setNewMessage(\"\");\r\n    };\r\n\r\n    return( \r\n    <div className=\"chat-app\">\r\n        <div>{messages.sort((a, b) => a.createAt?.seconds - b.createAt?.seconds).map((messages, i) => <h3 key={i}> {messages.text} </h3>)}</div>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"new-message-from\">\r\n            <input \r\n                className=\"new-message-input\"\r\n                placeholder=\"Votre message...\"\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                value={newMessage}\r\n            />\r\n\r\n            <button type=\"submit\" className=\"send-button\">Envoyer</button>\r\n        </form>\r\n    </div>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAEC,UAAU,EAAEC,KAAK,EAAEC,KAAK,QAAQ,qBAAqB;AACnG,SAASC,IAAI,EAAEC,EAAE,QAAQ,oBAAoB;AAAC;AAE9C,OAAO,MAAMC,IAAI,GAAIC,KAAK,IAAI;EAAA;EAE1B,MAAM;IAACC;EAAI,CAAC,GAAGD,KAAK;EAEpB,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMgB,WAAW,GAAGf,UAAU,CAACO,EAAE,EAAE,UAAU,CAAC;EAE9CT,SAAS,CAAC,MAAM;IACZ,MAAMkB,aAAa,GAAGZ,KAAK,CAACW,WAAW,EAAEV,KAAK,CAAC,MAAM,EAAE,IAAI,EAAEK,IAAI,CAAC,CAAC;IACnE,MAAMO,QAAQ,GAAGd,UAAU,CAACa,aAAa,EAAGE,QAAQ,IAAK;MACrD,IAAIP,QAAQ,GAAG,EAAE;MACjBO,QAAQ,CAACC,OAAO,CAAEC,GAAG,IAAK;QACtBT,QAAQ,CAACU,IAAI,CAAC;UAAC,GAAGD,GAAG,CAACE,IAAI,EAAE;UAAEC,EAAE,EAAEH,GAAG,CAACG;QAAE,CAAC,CAAC;MAC9C,CAAC,CAAC;MACFX,WAAW,CAACD,QAAQ,CAAC;IACzB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAGb,UAAU,KAAK,EAAE,EAAE;IAEtB,MAAMZ,MAAM,CAACc,WAAW,EAAE;MACtBY,IAAI,EAAEd,UAAU;MAChBe,QAAQ,EAAE1B,eAAe,EAAE;MAC3B2B,IAAI,EAAEvB,IAAI,CAACwB,WAAW,CAACC,WAAW;MAClCrB;IACJ,CAAC,CAAC;IAEFI,aAAa,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,oBACA;IAAK,SAAS,EAAC,UAAU;IAAA,wBACrB;MAAA,UAAMH,QAAQ,CAACqB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC;QAAA;QAAA,OAAK,gBAAAD,CAAC,CAACL,QAAQ,gDAAV,YAAYO,OAAO,oBAAGD,CAAC,CAACN,QAAQ,gDAAV,YAAYO,OAAO;MAAA,EAAC,CAACC,GAAG,CAAC,CAACzB,QAAQ,EAAE0B,CAAC,kBAAK;QAAA,WAAY,GAAC,EAAC1B,QAAQ,CAACgB,IAAI,EAAC,GAAC;MAAA,GAApBU,CAAC;QAAA;QAAA;QAAA;MAAA,QAAwB;IAAC;MAAA;MAAA;MAAA;IAAA,QAAO,eAExI;MAAM,QAAQ,EAAEb,YAAa;MAAC,SAAS,EAAC,kBAAkB;MAAA,wBACtD;QACI,SAAS,EAAC,mBAAmB;QAC7B,WAAW,EAAC,kBAAkB;QAC9B,QAAQ,EAAGC,CAAC,IAAKX,aAAa,CAACW,CAAC,CAACa,MAAM,CAACC,KAAK,CAAE;QAC/C,KAAK,EAAE1B;MAAW;QAAA;QAAA;QAAA;MAAA,QACpB,eAEF;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,aAAa;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3D;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAA,GAjDYL,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}