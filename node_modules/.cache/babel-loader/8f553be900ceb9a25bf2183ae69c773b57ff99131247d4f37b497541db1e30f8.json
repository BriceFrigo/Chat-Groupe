{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brice FRIGO\\\\Desktop\\\\tuto-react-qui-marche\\\\src\\\\components\\\\Auth.js\";\nimport { auth, provider } from \"../firebase-config.js\";\nimport { signInWithPopup } from 'firebase/auth';\nimport Cookies from \"universal-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\nexport const Auth = props => {\n  const {\n    setIsAuth\n  } = props;\n  const signInWithGoogle = async () => {\n    try {\n      const result = await signInWithPopup(auth, provider);\n      cookies.set(\"auth-token\", result.user.refreshToken);\n      setIsAuth(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Se connecter avec Google pour continuer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: signInWithGoogle,\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n_c = Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["auth","provider","signInWithPopup","Cookies","cookies","Auth","props","setIsAuth","signInWithGoogle","result","set","user","refreshToken","err","console","log"],"sources":["C:/Users/Brice FRIGO/Desktop/tuto-react-qui-marche/src/components/Auth.js"],"sourcesContent":["import {auth, provider } from \"../firebase-config.js\";\r\nimport {signInWithPopup} from 'firebase/auth';\r\n\r\nimport Cookies from \"universal-cookie\";\r\nconst cookies = new Cookies();\r\n\r\nexport const Auth = (props) => {\r\n    const {setIsAuth} = props;\r\n        const signInWithGoogle = async () => {\r\n            try {\r\n                const result = await signInWithPopup(auth, provider);\r\n                cookies.set(\"auth-token\", result.user.refreshToken);\r\n                setIsAuth(true);\r\n            }catch(err){\r\n                console.log(err)\r\n            }\r\n\r\n        }\r\n    return <div className=\"auth\">\r\n        <p>Se connecter avec Google pour continuer</p>\r\n        <button onClick={signInWithGoogle}>Connect</button>\r\n    </div>;\r\n}"],"mappings":";AAAA,SAAQA,IAAI,EAAEC,QAAQ,QAAQ,uBAAuB;AACrD,SAAQC,eAAe,QAAO,eAAe;AAE7C,OAAOC,OAAO,MAAM,kBAAkB;AAAC;AACvC,MAAMC,OAAO,GAAG,IAAID,OAAO,EAAE;AAE7B,OAAO,MAAME,IAAI,GAAIC,KAAK,IAAK;EAC3B,MAAM;IAACC;EAAS,CAAC,GAAGD,KAAK;EACrB,MAAME,gBAAgB,GAAG,YAAY;IACjC,IAAI;MACA,MAAMC,MAAM,GAAG,MAAMP,eAAe,CAACF,IAAI,EAAEC,QAAQ,CAAC;MACpDG,OAAO,CAACM,GAAG,CAAC,YAAY,EAAED,MAAM,CAACE,IAAI,CAACC,YAAY,CAAC;MACnDL,SAAS,CAAC,IAAI,CAAC;IACnB,CAAC,QAAMM,GAAG,EAAC;MACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB;EAEJ,CAAC;EACL,oBAAO;IAAK,SAAS,EAAC,MAAM;IAAA,wBACxB;MAAA,UAAG;IAAuC;MAAA;MAAA;MAAA;IAAA,QAAI,eAC9C;MAAQ,OAAO,EAAEL,gBAAiB;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACjD;AACV,CAAC;AAAA,KAhBYH,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}